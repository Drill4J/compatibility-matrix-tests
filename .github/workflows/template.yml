name: Run test
on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
      preset:
        required: true
        type: string
      javaVersion:
        required: true
        type: string
      distribution:
        required: true
        type: string
      testModule:
        required: true
        type: string
      gradleVersion:
        required: true
        type: string
      kotlinVersion:
        required: false
        type: string

jobs:
  run-tests:
    runs-on: ${{ inputs.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Download agent binary
        uses: actions/download-artifact@v4
        with:
          pattern: agent-*-${{ inputs.preset }}
          path: agent/
          merge-multiple: true
      - if: inputs.preset == 'linuxX64' || inputs.preset == 'macosX64'
        run: chmod +x ${{ github.workspace }}/gradlew
      - if: inputs.preset == 'linuxX64' || inputs.preset == 'macosX64'
        run: chmod +x ${{ github.workspace }}/setup-shared-libs.sh
      - if: inputs.preset == 'linuxX64'
        run: sudo apt-get install -y libtinfo5
      - if: inputs.preset == 'linuxX64' || inputs.preset == 'macosX64'
        run: ${{ github.workspace }}/setup-shared-libs.sh
      - if: inputs.preset == 'mingwX64'
        run: ${{ github.workspace }}/setup-shared-libs.bat
      - name: Set-up kotlin version for java 21
        if: inputs.javaVersion == '21.0'
        run: echo "kotlinVersion=${{ inputs.kotlinVersion }}" >> $GITHUB_ENV
        shell: bash
      - uses: actions/setup-java@v3
        with:
          java-version: ${{ inputs.javaVersion }}
          distribution: ${{ inputs.distribution }}
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: ${{ inputs.gradleVersion }}
      - run: gradle ${{ inputs.testModule }}:check "-Dtest-agent.binaries=${{ github.workspace }}/agent"
