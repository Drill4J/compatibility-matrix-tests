name: Check
on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
    paths:
      - '**/src/**'
      - '**.gradle.kts'
      - 'gradle.properties'
  pull_request:
    branches:
      - 'main'
    paths:
      - '**/src/**'
      - '**.gradle.kts'
      - 'gradle.properties'

jobs:
  build-agent:
    strategy:
      fail-fast: false
      matrix:
        config:
          - { os: ubuntu-latest, preset: linuxX64 }
          - { os: windows-latest, preset: mingwX64 }
          - { os: macos-latest, preset: macosX64 }
    runs-on: ${{ matrix.config.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: 8.0
          distribution: 'corretto'
      - if: matrix.config.preset == 'linuxX64' || matrix.config.preset == 'macosX64'
        run: chmod +x ${{ github.workspace }}/gradlew
      - if: matrix.config.preset == 'linuxX64' || matrix.config.preset == 'macosX64'
        run: chmod +x ${{ github.workspace }}/setup-shared-libs.sh
      - if: matrix.config.preset == 'linuxX64'
        run: sudo apt-get install -y libtinfo5
      - if: matrix.config.preset == 'linuxX64' || matrix.config.preset == 'macosX64'
        run: ${{ github.workspace }}/setup-shared-libs.sh
      - if: matrix.config.preset == 'mingwX64'
        run: ${{ github.workspace }}/setup-shared-libs.bat
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: 7.4.2
      - run: gradle :test-agent:runtimeJar :test-agent:build
      - name: Upload agent binary
        uses: actions/upload-artifact@master
        with:
          name: agent-binary-${{matrix.config.preset}}
          path: |
            test-agent/build/bin/**/*.dll
            test-agent/build/bin/**/*.so
            test-agent/build/bin/**/*.dylib
      - name: Upload agent jar
        uses: actions/upload-artifact@master
        with:
          name: agent-jar-${{matrix.config.preset}}
          path: test-agent/build/libs/drill-runtime.jar
  check:
    needs: build-agent
    strategy:
      fail-fast: false
      matrix:
        config:
          - { os: ubuntu-latest, preset: linuxX64 }
          - { os: windows-latest, preset: mingwX64 }
          - { os: macos-latest, preset: macosX64 }
        envVersions:
          # Spring 1.5.22 (Only Spring MVC, WebFlux appears from 2.X version of Spring Boot)
          - { javaVersion: 8.0, distribution: 'corretto', testModule: 'spring-1.5.22-jetty', gradleVersion: '7.4.2' }
          - { javaVersion: 8.0, distribution: 'corretto', testModule: 'spring-1.5.22-tomcat', gradleVersion: '7.4.2' }
          - { javaVersion: 8.0, distribution: 'corretto', testModule: 'spring-1.5.22-undertow', gradleVersion: '7.4.2' }
          - { javaVersion: 8.0, distribution: 'temurin', testModule: 'spring-1.5.22-jetty', gradleVersion: '7.4.2' }
          - { javaVersion: 8.0, distribution: 'zulu', testModule: 'spring-1.5.22-jetty', gradleVersion: '7.4.2' }

          - { javaVersion: 11.0, distribution: 'corretto', testModule: 'spring-1.5.22-jetty', gradleVersion: '7.4.2' }
          - { javaVersion: 11.0, distribution: 'corretto', testModule: 'spring-1.5.22-tomcat', gradleVersion: '7.4.2' }
          - { javaVersion: 11.0, distribution: 'corretto', testModule: 'spring-1.5.22-undertow', gradleVersion: '7.4.2' }
          - { javaVersion: 11.0, distribution: 'temurin', testModule: 'spring-1.5.22-jetty', gradleVersion: '7.4.2' }
          - { javaVersion: 11.0, distribution: 'zulu', testModule: 'spring-1.5.22-jetty', gradleVersion: '7.4.2' }

          - { javaVersion: 17.0, distribution: 'corretto', testModule: 'spring-1.5.22-jetty', gradleVersion: '7.4.2' }
          - { javaVersion: 17.0, distribution: 'corretto', testModule: 'spring-1.5.22-tomcat', gradleVersion: '7.4.2' }
          - { javaVersion: 17.0, distribution: 'corretto', testModule: 'spring-1.5.22-undertow', gradleVersion: '7.4.2' }
          - { javaVersion: 17.0, distribution: 'temurin', testModule: 'spring-1.5.22-jetty', gradleVersion: '7.4.2' }
          - { javaVersion: 17.0, distribution: 'zulu', testModule: 'spring-1.5.22-jetty', gradleVersion: '7.4.2' }
          - { javaVersion: 17.0, distribution: 'oracle', testModule: 'spring-1.5.22-jetty', gradleVersion: '7.4.2' }

          # Spring 2.7.18
          - { javaVersion: 8.0, distribution: 'corretto', testModule: 'spring-2.7.18-jetty', gradleVersion: '7.4.2' }
          - { javaVersion: 8.0, distribution: 'corretto', testModule: 'spring-2.7.18-tomcat', gradleVersion: '7.4.2' }
          - { javaVersion: 8.0, distribution: 'corretto', testModule: 'spring-2.7.18-undertow', gradleVersion: '7.4.2' }
          - { javaVersion: 8.0, distribution: 'corretto', testModule: 'spring-2.7.18-webflux-jetty', gradleVersion: '7.4.2' }
          - { javaVersion: 8.0, distribution: 'corretto', testModule: 'spring-2.7.18-webflux-netty', gradleVersion: '7.4.2' }
          - { javaVersion: 8.0, distribution: 'corretto', testModule: 'spring-2.7.18-webflux-tomcat', gradleVersion: '7.4.2' }
          - { javaVersion: 8.0, distribution: 'corretto', testModule: 'spring-2.7.18-webflux-undertow', gradleVersion: '7.4.2' }

          - { javaVersion: 11.0, distribution: 'corretto', testModule: 'spring-2.7.18-jetty', gradleVersion: '7.4.2' }
          - { javaVersion: 11.0, distribution: 'corretto', testModule: 'spring-2.7.18-tomcat', gradleVersion: '7.4.2' }
          - { javaVersion: 11.0, distribution: 'corretto', testModule: 'spring-2.7.18-undertow', gradleVersion: '7.4.2' }
          - { javaVersion: 11.0, distribution: 'corretto', testModule: 'spring-2.7.18-webflux-jetty', gradleVersion: '7.4.2' }
          - { javaVersion: 11.0, distribution: 'corretto', testModule: 'spring-2.7.18-webflux-netty', gradleVersion: '7.4.2' }
          - { javaVersion: 11.0, distribution: 'corretto', testModule: 'spring-2.7.18-webflux-tomcat', gradleVersion: '7.4.2' }
          - { javaVersion: 11.0, distribution: 'corretto', testModule: 'spring-2.7.18-webflux-undertow', gradleVersion: '7.4.2' }

          - { javaVersion: 17.0, distribution: 'corretto', testModule: 'spring-2.7.18-jetty', gradleVersion: '7.4.2' }
          - { javaVersion: 17.0, distribution: 'corretto', testModule: 'spring-2.7.18-tomcat', gradleVersion: '7.4.2' }
          - { javaVersion: 17.0, distribution: 'corretto', testModule: 'spring-2.7.18-undertow', gradleVersion: '7.4.2' }
          - { javaVersion: 17.0, distribution: 'corretto', testModule: 'spring-2.7.18-webflux-jetty', gradleVersion: '7.4.2' }
          - { javaVersion: 17.0, distribution: 'corretto', testModule: 'spring-2.7.18-webflux-netty', gradleVersion: '7.4.2' }
          - { javaVersion: 17.0, distribution: 'corretto', testModule: 'spring-2.7.18-webflux-tomcat', gradleVersion: '7.4.2' }
          - { javaVersion: 17.0, distribution: 'corretto', testModule: 'spring-2.7.18-webflux-undertow', gradleVersion: '7.4.2' }
          - { javaVersion: 17.0, distribution: 'oracle', testModule: 'spring-2.7.18-webflux-netty', gradleVersion: '7.4.2' }
          - { javaVersion: 17.0, distribution: 'temurin', testModule: 'spring-2.7.18-webflux-netty', gradleVersion: '7.4.2' }
          - { javaVersion: 17.0, distribution: 'zulu', testModule: 'spring-2.7.18-webflux-netty', gradleVersion: '7.4.2' }
          # Spring 3.1.9
          - { javaVersion: 17.0, distribution: 'corretto', testModule: 'spring-3.1.9-jetty', gradleVersion: '7.4.2' }
          - { javaVersion: 17.0, distribution: 'corretto', testModule: 'spring-3.1.9-tomcat', gradleVersion: '7.4.2' }
          - { javaVersion: 17.0, distribution: 'corretto', testModule: 'spring-3.1.9-undertow', gradleVersion: '7.4.2' }
          - { javaVersion: 17.0, distribution: 'corretto', testModule: 'spring-3.1.9-webflux-jetty', gradleVersion: '7.4.2' }
          - { javaVersion: 17.0, distribution: 'corretto', testModule: 'spring-3.1.9-webflux-netty', gradleVersion: '7.4.2' }
          - { javaVersion: 17.0, distribution: 'corretto', testModule: 'spring-3.1.9-webflux-tomcat', gradleVersion: '7.4.2' }
          - { javaVersion: 17.0, distribution: 'corretto', testModule: 'spring-3.1.9-webflux-undertow', gradleVersion: '7.4.2' }
          # Servers:
          # Jetty
          - { javaVersion: 11.0, distribution: 'corretto', testModule: 'clean-jetty-10.0.20', gradleVersion: '7.4.2' }
          - { javaVersion: 17.0, distribution: 'corretto', testModule: 'clean-jetty-10.0.20', gradleVersion: '7.4.2' }
          # Netty:
          - { javaVersion: 8.0, distribution: 'corretto', testModule: 'clean-netty-4.1.107', gradleVersion: '7.4.2' }
          - { javaVersion: 11.0, distribution: 'corretto', testModule: 'clean-netty-4.1.107', gradleVersion: '7.4.2' }
          - { javaVersion: 17.0, distribution: 'corretto', testModule: 'clean-netty-4.1.107', gradleVersion: '7.4.2' }
          # Tomcat:
          - { javaVersion: 11.0, distribution: 'corretto', testModule: 'clean-tomcat-10.1.19', gradleVersion: '7.4.2' }
          - { javaVersion: 17.0, distribution: 'corretto', testModule: 'clean-tomcat-11.0.0-M18', gradleVersion: '7.4.2' }
          # Undertow:
          - { javaVersion: 11.0, distribution: 'corretto', testModule: 'clean-undertow-2.3.12', gradleVersion: '7.4.2' }
          - { javaVersion: 17.0, distribution: 'corretto', testModule: 'clean-undertow-2.3.12', gradleVersion: '7.4.2' }

    runs-on: ${{ matrix.config.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Download agent binary
        uses: actions/download-artifact@v4
        with:
          pattern: agent-*-${{matrix.config.preset}}
          path: agent/
          merge-multiple: true
      - if: matrix.config.preset == 'linuxX64' || matrix.config.preset == 'macosX64'
        run: chmod +x ${{ github.workspace }}/gradlew
      - if: matrix.config.preset == 'linuxX64' || matrix.config.preset == 'macosX64'
        run: chmod +x ${{ github.workspace }}/setup-shared-libs.sh
      - if: matrix.config.preset == 'linuxX64'
        run: sudo apt-get install -y libtinfo5
      - if: matrix.config.preset == 'linuxX64' || matrix.config.preset == 'macosX64'
        run: ${{ github.workspace }}/setup-shared-libs.sh
      - if: matrix.config.preset == 'mingwX64'
        run: ${{ github.workspace }}/setup-shared-libs.bat
      - uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.envVersions.javaVersion }}
          distribution: ${{ matrix.envVersions.distribution }}
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: ${{ matrix.envVersions.gradleVersion }}
      - run: gradle check "-Dtest-agent.binaries=${{github.workspace}}/agent" --project-dir ${{matrix.envVersions.testModule}}
