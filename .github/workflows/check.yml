name: Check
on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
    paths:
      - '**/src/**'
      - '**.gradle.kts'
      - 'gradle.properties'
  pull_request:
    branches:
      - 'main'
    paths:
      - '**/src/**'
      - '**.gradle.kts'
      - 'gradle.properties'

jobs:
  install-agent:
    strategy:
      fail-fast: false
      matrix:
        config:
          - { os: ubuntu-latest, preset: linuxX64 }
          - { os: windows-latest, preset: mingwX64 }
          - { os: macos-latest, preset: macosX64 }
    runs-on: ${{ matrix.config.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: 8.0
          distribution: 'corretto'
      - uses: gradle/wrapper-validation-action@v1
      - if: matrix.config.preset == 'linuxX64' || matrix.config.preset == 'macosX64'
        run: chmod +x ${{ github.workspace }}/gradlew
      - if: matrix.config.preset == 'linuxX64' || matrix.config.preset == 'macosX64'
        run: chmod +x ${{ github.workspace }}/setup-shared-libs.sh
      - if: matrix.config.preset == 'linuxX64'
        run: sudo apt-get install -y libtinfo5
      - if: matrix.config.preset == 'linuxX64' || matrix.config.preset == 'macosX64'
        run: ${{ github.workspace }}/setup-shared-libs.sh
      - if: matrix.config.preset == 'mingwX64'
        run: ${{ github.workspace }}/setup-shared-libs.bat
      - uses: gradle/gradle-build-action@v2
        with:
          arguments: :test-agent:buildAgent
  check:
    needs: install-agent
    strategy:
      fail-fast: false
      matrix:
        config:
          - { os: ubuntu-latest, preset: linuxX64 }
          - { os: windows-latest, preset: mingwX64 }
          - { os: macos-latest, preset: macosX64 }
        envVersions:
          - { javaVersion: 8.0, distribution: 'zulu', testModule: 'spring-jetty' }
          - { javaVersion: 8.0, distribution: 'zulu', testModule: 'spring-tomcat' }
          - { javaVersion: 8.0, distribution: 'zulu', testModule: 'spring-undertow' }
          - { javaVersion: 8.0, distribution: 'zulu', testModule: 'spring-webflux-jetty' }
          - { javaVersion: 8.0, distribution: 'zulu', testModule: 'spring-webflux-netty' }
          - { javaVersion: 8.0, distribution: 'zulu', testModule: 'spring-webflux-tomcat' }
          - { javaVersion: 8.0, distribution: 'zulu', testModule: 'spring-webflux-undertow' }
          - { javaVersion: 8.0, distribution: 'temurin', testModule: 'spring-jetty' }
          - { javaVersion: 8.0, distribution: 'temurin', testModule: 'spring-tomcat' }
          - { javaVersion: 8.0, distribution: 'temurin', testModule: 'spring-undertow' }
          - { javaVersion: 8.0, distribution: 'temurin', testModule: 'spring-webflux-jetty' }
          - { javaVersion: 8.0, distribution: 'temurin', testModule: 'spring-webflux-netty' }
          - { javaVersion: 8.0, distribution: 'temurin', testModule: 'spring-webflux-tomcat' }
          - { javaVersion: 8.0, distribution: 'temurin', testModule: 'spring-webflux-undertow' }
          - { javaVersion: 8.0, distribution: 'corretto', testModule: 'spring-jetty' }
          - { javaVersion: 8.0, distribution: 'corretto', testModule: 'spring-tomcat' }
          - { javaVersion: 8.0, distribution: 'corretto', testModule: 'spring-undertow' }
          - { javaVersion: 8.0, distribution: 'corretto', testModule: 'spring-webflux-jetty' }
          - { javaVersion: 8.0, distribution: 'corretto', testModule: 'spring-webflux-netty' }
          - { javaVersion: 8.0, distribution: 'corretto', testModule: 'spring-webflux-tomcat' }
          - { javaVersion: 8.0, distribution: 'corretto', testModule: 'spring-webflux-undertow' }
          - { javaVersion: 11.0, distribution: 'zulu', testModule: 'spring-jetty' }
          - { javaVersion: 11.0, distribution: 'zulu', testModule: 'spring-tomcat' }
          - { javaVersion: 11.0, distribution: 'zulu', testModule: 'spring-undertow' }
          - { javaVersion: 11.0, distribution: 'zulu', testModule: 'spring-webflux-jetty' }
          - { javaVersion: 11.0, distribution: 'zulu', testModule: 'spring-webflux-netty' }
          - { javaVersion: 11.0, distribution: 'zulu', testModule: 'spring-webflux-tomcat' }
          - { javaVersion: 11.0, distribution: 'zulu', testModule: 'spring-webflux-undertow' }
          - { javaVersion: 11.0, distribution: 'temurin', testModule: 'spring-jetty' }
          - { javaVersion: 11.0, distribution: 'temurin', testModule: 'spring-tomcat' }
          - { javaVersion: 11.0, distribution: 'temurin', testModule: 'spring-undertow' }
          - { javaVersion: 11.0, distribution: 'temurin', testModule: 'spring-webflux-jetty' }
          - { javaVersion: 11.0, distribution: 'temurin', testModule: 'spring-webflux-netty' }
          - { javaVersion: 11.0, distribution: 'temurin', testModule: 'spring-webflux-tomcat' }
          - { javaVersion: 11.0, distribution: 'temurin', testModule: 'spring-webflux-undertow' }
          - { javaVersion: 11.0, distribution: 'corretto', testModule: 'spring-jetty' }
          - { javaVersion: 11.0, distribution: 'corretto', testModule: 'spring-tomcat' }
          - { javaVersion: 11.0, distribution: 'corretto', testModule: 'spring-undertow' }
          - { javaVersion: 11.0, distribution: 'corretto', testModule: 'spring-webflux-jetty' }
          - { javaVersion: 11.0, distribution: 'corretto', testModule: 'spring-webflux-netty' }
          - { javaVersion: 11.0, distribution: 'corretto', testModule: 'spring-webflux-tomcat' }
          - { javaVersion: 11.0, distribution: 'corretto', testModule: 'spring-webflux-undertow' }
          - { javaVersion: 17.0, distribution: 'zulu', testModule: 'spring-jetty' }
          - { javaVersion: 17.0, distribution: 'zulu', testModule: 'spring-tomcat' }
          - { javaVersion: 17.0, distribution: 'zulu', testModule: 'spring-undertow' }
          - { javaVersion: 17.0, distribution: 'zulu', testModule: 'spring-webflux-jetty' }
          - { javaVersion: 17.0, distribution: 'zulu', testModule: 'spring-webflux-netty' }
          - { javaVersion: 17.0, distribution: 'zulu', testModule: 'spring-webflux-tomcat' }
          - { javaVersion: 17.0, distribution: 'zulu', testModule: 'spring-webflux-undertow' }
        #          - { version: 17.0, distribution: 'temurin' }
        #          - { version: 17.0, distribution: 'corretto' }
        #          - { version: 17.0, distribution: 'oracle' }
    runs-on: ${{ matrix.config.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.envVersions.javaVersion }}
          distribution: ${{ matrix.envVersions.distribution }}
      - if: matrix.config.preset == 'linuxX64' || matrix.config.preset == 'macosX64'
        run: |
          if echo "${{ matrix.javaVersion.version }}" | grep -q "^17"; then
            echo "Using java17.gradle.properties"
            cp java17.gradle.properties gradle.properties
          fi
      - if: matrix.config.preset == 'mingwX64'
        shell: pwsh
        run: |
          if ("${{ matrix.envVersions.version }}" -eq "17") {
            Write-Output "Using java17.gradle.properties"
            Copy-Item -Path java17.gradle.properties -Destination gradle.properties
          }
      - uses: gradle/wrapper-validation-action@v1
      - if: matrix.config.preset == 'linuxX64' || matrix.config.preset == 'macosX64'
        run: chmod +x ${{ github.workspace }}/gradlew
      - if: matrix.config.preset == 'linuxX64' || matrix.config.preset == 'macosX64'
        run: chmod +x ${{ github.workspace }}/setup-shared-libs.sh
      - if: matrix.config.preset == 'linuxX64'
        run: sudo apt-get install -y libtinfo5
      - if: matrix.config.preset == 'linuxX64' || matrix.config.preset == 'macosX64'
        run: ${{ github.workspace }}/setup-shared-libs.sh
      - if: matrix.config.preset == 'mingwX64'
        run: ${{ github.workspace }}/setup-shared-libs.bat
      - uses: gradle/gradle-build-action@v2
        with:
          arguments: :${{matrix.envVersions.testModule}}:check
      - uses: gradle/gradle-build-action@v2
        with:
          arguments: :${{matrix.envVersions.testModule}}:check
